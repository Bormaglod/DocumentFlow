{
  "name": "payment_order",
  "viewer": {
    "dataset": {
      "select": "select id, status_id, status_name, doc_date, view_number, contractor_name, date_debited, expense, income from payment_order_view",
      "select-id": "select id, status_id, status_name, doc_date, view_number, contractor_name, date_debited, expense, income from payment_order_view where id = :id"
    },
    "data-type": "Document",
    "allow-grouping": true,
    "columns": [
      {
        "datafield": "id",
        "text": "Id",
        "type": "Text",
        "width": 180,
        "visible": false
      },
      {
        "datafield": "status_id",
        "text": "Код состояния",
        "type": "Integer",
        "width": 80,
        "visible": false,
        "allow-grouping": true
      },
      {
        "datafield": "status_name",
        "text": "Состояние",
        "type": "Text",
        "width": 110,
        "visible": false,
        "allow-grouping": true
      },
      {
        "datafield": "doc_date",
        "text": "Дата",
        "type": "date",
        "width": 150,
        "hideable": false,
        "date-format": "dd.MM.yyyy"
      },
      {
        "datafield": "view_number",
        "text": "Номер",
        "type": "Text",
        "width": 100
      },
      {
        "datafield": "contractor_name",
        "text": "Контрагент",
        "type": "Text",
        "auto-size": true,
        "hideable": true
      },
      {
        "datafield": "date_debited",
        "text": "Дата списания",
        "type": "date",
        "width": 150,
        "date-format": "dd.MM.yyyy"
      },
      {
        "text": "Приход",
        "type": "numeric",
        "width": 120,
        "format-mode": "Currency",
        "horizontal-align": "Right",
        "datafield": "income"
      },
      {
        "text": "Расход",
        "type": "numeric",
        "width": 120,
        "format-mode": "Currency",
        "horizontal-align": "Right",
        "datafield": "expense"
      }
    ],
    "stacked-columns": [
      {
        "header": "Сумма операции",
        "childs": [ "income", "expense" ]
      }
    ],
    "sorts": [
      {
        "name": "doc_date"
      }
    ]
  },
  "editor": {
    "dataset": {
      "select": "select po.id, '№' || view_number || ' от ' || to_char(doc_date, 'DD.MM.YYYY') as name, doc_date, doc_number, contractor_id, date_debited, amount_debited, purchase_id, s.code as cur_status_name from payment_order po join status s on (s.id = status_id) where po.id = :id",
      "update": "update payment_order set doc_date = :doc_date, doc_number = :doc_number, contractor_id = :contractor_id, date_debited = :date_debited, amount_debited = :amount_debited, purchase_id = :purchase_id where id = :id"
    },
    "controls": [
      {
        "type": "SelectBox",
        "text": "Контрагент",
        "datafield": "contractor_id",
        "label-width": 120,
        "edit-width": 300,
        "dataset": "select id, status_id, name, parent_id from contractor where status_id in (500, 1002) order by name",
        "expression": [
          {
            "expression": "Populate(\"purchase_id\")"
          }
        ]
      },
      {
        "type": "DateTime",
        "text": "Дата п/п",
        "customformat": "dd.MM.yyyy",
        "datafield": "doc_date",
        "label-width": 120,
        "edit-width": 140
      },
      {
        "type": "Integer",
        "text": "Номер п/п",
        "datafield": "doc_number",
        "label-width": 120
      },
      {
        "type": "DateTime",
        "text": "Дата списания",
        "customformat": "dd.MM.yyyy",
        "datafield": "date_debited",
        "label-width": 120,
        "edit-width": 140
      },
      {
        "type": "Currency",
        "text": "Сумма",
        "datafield": "amount_debited",
        "label-width": 120
      },
      {
        "type": "SelectBox",
        "text": "Заявка на расход",
        "datafield": "purchase_id",
        "label-width": 120,
        "edit-width": 400,
        "dataset": "select pr.id, ek.name || ' №' || view_number || ' от ' || to_char(doc_date, 'DD.MM.YYYY') || ' на сумму ' || sum(prd.cost_with_tax) as name from purchase_request pr join entity_kind ek on (ek.id = pr.entity_kind_id) join purchase_request_detail prd on (prd.owner_id = pr.id) where (pr.status_id in (3002, 3004) or pr.id = :purchase_id) and (pr.contractor_id = :contractor_id) group by pr.id, ek.name, view_number, doc_date",
        "expressions": [
          {
            "destination": "contractor_id",
            "sql-expression": "select contractor_id from purchase_request where id = :purchase_id"
          }
        ]
      }
    ],
    "conditions": [
      {
        "controls": [ "contractor_id", "doc_date", "doc_number", "date_debited", "amount_debited" ],
        "enable": {
          "states": [ "compiled", "is changing" ]
        }
      },
      {
        "controls": [ "purchase_id" ],
        "enable": {
          "states": [ "expense" ]
        }
      },
      {
        "controls": [ "purchase_id" ],
        "visible": {
          "states": [ "expense", "canceled", "approved by" ],
          "if-equal": "(cur_status_name <> \"is changing\" and PrevStatusName(1) = \"expense\") or (PrevStatusName(1) = \"approved by\" and PrevStatusName(2) = \"expense\")"
        }
      }
    ]
  }
}