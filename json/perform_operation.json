{
  "name": "perform_operation",
  "viewer": {
    "dataset": {
      "select": "select po.id, po.status_id, s.note as status_name, ua.name as user_created, po.doc_date, '№' || p_ord.doc_number || ' от ' || to_char(p_ord.doc_date, 'DD.MM.YYYY') as order_name, g.name as goods_name, o.name as operation_name, p.name as employee_name, ug.name as using_goods_name, case when ur.name is null then ug.name else ur.name end as replacing_goods_name, po.amount, po.salary from perform_operation po join status s on (s.id = po.status_id) join user_alias ua on (ua.id = po.user_created_id) left join production_order p_ord on (p_ord.id = po.order_id) left join goods g on (g.id = po.goods_id) left join operation o on (o.id = po.operation_id) left join employee e on (e.id = po.employee_id) left join person p on (p.id = e.person_id) left join goods ug on (ug.id = po.using_goods_id) left join goods ur on (ur.id = po.replacing_goods_id) where po.doc_date between :from_date and :to_date and po.organization_id = :organization_id",
      "select-id": "select po.id, po.status_id, s.note as status_name, ua.name as user_created, po.doc_date, '№' || p_ord.doc_number || ' от ' || to_char(p_ord.doc_date, 'DD.MM.YYYY') as order_name, g.name as goods_name, o.name as operation_name, p.name as employee_name, ug.name as using_goods_name, case when ur.name is null then ug.name else ur.name end as replacing_goods_name, po.amount, po.salary from perform_operation po join status s on (s.id = po.status_id) join user_alias ua on (ua.id = po.user_created_id) left join production_order p_ord on (p_ord.id = po.order_id) left join goods g on (g.id = po.goods_id) left join operation o on (o.id = po.operation_id) left join employee e on (e.id = po.employee_id) left join person p on (p.id = e.person_id) left join goods ug on (ug.id = po.using_goods_id) left join goods ur on (ur.id = po.replacing_goods_id) where po.id = :id"
    },
    "data-type": "Document",
    "allow-grouping": true,
    "from-date": "CurrentDay",
    "to-date": "CurrentDay",
    "groups": [ "order_name", "goods_name" ],
    "columns": [
      {
        "datafield": "id",
        "text": "Id",
        "type": "Text",
        "width": 180,
        "visible": false
      },
      {
        "datafield": "status_id",
        "text": "Код состояния",
        "type": "Integer",
        "width": 80,
        "visible": false,
        "allow-grouping": true
      },
      {
        "datafield": "status_name",
        "text": "Состояние",
        "type": "Text",
        "width": 110,
        "visible": false,
        "allow-grouping": true
      },
      {
        "datafield": "user_created",
        "text": "Автор",
        "type": "Text",
        "width": 110,
        "visible": false,
        "allow-grouping": true
      },
      {
        "datafield": "doc_date",
        "text": "Дата/время",
        "type": "date",
        "width": 150,
        "hideable": false
      },
      {
        "datafield": "order_name",
        "text": "Заказ",
        "type": "Text",
        "visible": false,
        "width": 200,
        "allow-grouping": true
      },
      {
        "datafield": "goods_name",
        "text": "Изделие",
        "type": "Text",
        "visible": false,
        "width": 200,
        "allow-grouping": true
      },
      {
        "datafield": "operation_name",
        "text": "Операция",
        "type": "Text",
        "hideable": false,
        "auto-size": true,
        "allow-grouping": true
      },
      {
        "datafield": "employee_name",
        "text": "Исполнитель",
        "type": "Text",
        "width": 200,
        "allow-grouping": true
      },
      {
        "datafield": "replacing_goods_name",
        "text": "Использованный материал",
        "type": "Text",
        "width": 270,
        "allow-grouping": true
      },
      {
        "datafield": "amount",
        "text": "Количество",
        "type": "integer",
        "width": 140,
        "horizontal-align": "Right"
      },
      {
        "datafield": "salary",
        "text": "Зарплата",
        "type": "numeric",
        "width": 120,
        "allow-grouping": false,
        "format-mode": "Currency",
        "horizontal-align": "Right",
        "summaries": {
          "aggregate": "Sum",
          "summary-view": "Both"
        }
      }
    ],
    "sorts": [
      {
        "name": "doc_date",
        "direction": "Descending"
      }
    ]
  },
  "editor": {
    "dataset": {
      "select": "select id, doc_date, order_id, goods_id, operation_id, amount, using_goods_id, replacing_goods_id, employee_id, salary from perform_operation where id = :id",
      "update": "update perform_operation set doc_date = :doc_date, order_id = :order_id, goods_id = :goods_id, operation_id = :operation_id, amount = :amount, using_goods_id = :using_goods_id, replacing_goods_id = :replacing_goods_id, employee_id = :employee_id, salary = :salary where id = :id"
    },
    "controls": [
      {
        "type": "SelectBox",
        "text": "Заказ",
        "datafield": "order_id",
        "label-width": 210,
        "edit-width": 350,
        "dataset": "select po.id, po.status_id, '№' || po.view_number || ' от ' || to_char(po.doc_date, 'DD.MM.YYYY') || ' на сумму ' || sum(pod.cost_with_tax) || ' (' || c.name || ')' as name from production_order po join production_order_detail pod on (pod.owner_id = po.id) join contractor c on (c.id = po.contractor_id) where po.status_id = status_code('in production') or po.id = :order_id group by po.id, c.name order by po.doc_date, po.doc_number",
        "expressions": [
          {
            "expression": "Populate(\"goods_id\"; true)"
          }
        ]
      },
      {
        "type": "SelectBox",
        "text": "Изделие",
        "datafield": "goods_id",
        "label-width": 210,
        "edit-width": 350,
        "dataset": "select g.id, g.status_id, g.name, g.parent_id from goods g left join production_order_detail pod on (pod.goods_id = g.id) where (pod.owner_id = :order_id and pod.complete_status < 100) or g.status_id = 500 or g.id = :goods_id",
        "expressions": [
          {
            "expression": "Populate(\"operation_id\"; true)"
          }
        ]
      },
      {
        "type": "SelectBox",
        "text": "Операция",
        "datafield": "operation_id",
        "label-width": 210,
        "edit-width": 350,
        "dataset": "select o.id, o.status_id, o.name, o.parent_id from operation o left join calc_item_operation cio on (cio.item_id = o.id) left join calculation c on (cio.owner_id = c.id) left join production_order_detail pod on (c.id = pod.calculation_id) where (pod.owner_id = :order_id and c.owner_id = :goods_id and (o.status_id = 1002 or o.id = :operation_id)) or o.status_id = 500 order by o.status_id, o.name",
        "expressions": [
          {
            "expression": "Populate(\"using_goods_id\"; true)"
          }
        ]
      },
      {
        "type": "Numeric",
        "text": "Количество",
        "datafield": "amount",
        "label-width": 210,
        "edit-width": 150,
        "decimal-digits": 0
      },
      {
        "type": "DateTime",
        "text": "Дата/время",
        "datafield": "doc_date",
        "label-width": 210,
        "edit-width": 170
      },
      {
        "type": "SelectBox",
        "text": "Материал (по спецификации)",
        "datafield": "using_goods_id",
        "label-width": 210,
        "edit-width": 350,
        "dataset": "select gu.id, gu.status_id, gu.name, gu.parent_id from goods gp join production_order_detail pod on (pod.goods_id = gp.id) join calc_item_operation cio on (cio.owner_id = pod.calculation_id) join used_material um on (um.calc_item_operation_id = cio.id) join goods gu on (gu.id = um.goods_id) where (pod.owner_id = :order_id and cio.item_id = :operation_id and gp.id = :goods_id) or (gp.id = :using_goods_id) union select g.id, g.status_id, g.name, g.parent_id from goods g where g.status_id = 500 order by name"
      },
      {
        "type": "SelectBox",
        "text": "Использованный материал",
        "datafield": "replacing_goods_id",
        "label-width": 210,
        "edit-width": 350,
        "dataset": "select g.id, g.status_id, g.name, g.parent_id from goods g where g.status_id in (500, 1002) order by g.name"
      },
      {
        "type": "SelectBox",
        "text": "Исполнитель",
        "datafield": "employee_id",
        "label-width": 210,
        "edit-width": 350,
        "dataset": "select e.id, e.status_id, p.name from perform_operation po join organization org on (org.id = po.organization_id) join employee e on (e.owner_id = org.id) join person p on (p.id = e.person_id) where po.id = :id and (e.status_id = 1002 or e.id = :employee_id)"
      },
      {
        "type": "Currency",
        "text": "Зарплата",
        "datafield": "salary",
        "label-width": 210,
        "edit-width": 150
      }
    ],
    "conditions": [
      {
        "controls": [ "order_id", "goods_id", "operation_id", "amount", "doc_date", "using_goods_id", "replacing_goods_id", "employee_id", "salary" ],
        "enable": {
          "states": [ "compiled", "is changing", "corrected" ]
        }
      }
    ]
  }
}